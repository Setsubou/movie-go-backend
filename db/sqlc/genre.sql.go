// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: genre.sql

package db

import (
	"context"
)

const getAllGenres = `-- name: GetAllGenres :many
SELECT g.id, g.genre, g.created_at, g.updated_at
FROM genres g
`

type GetAllGenresRow struct {
	Genre Genre
}

func (q *Queries) GetAllGenres(ctx context.Context) ([]GetAllGenresRow, error) {
	rows, err := q.db.Query(ctx, getAllGenres)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllGenresRow
	for rows.Next() {
		var i GetAllGenresRow
		if err := rows.Scan(
			&i.Genre.ID,
			&i.Genre.Genre,
			&i.Genre.CreatedAt,
			&i.Genre.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
