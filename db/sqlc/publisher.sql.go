// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: publisher.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getAllPublishersName = `-- name: GetAllPublishersName :many
SELECT p.id, p.publisher_name
FROM publisher p
`

type GetAllPublishersNameRow struct {
	ID            pgtype.UUID
	PublisherName string
}

func (q *Queries) GetAllPublishersName(ctx context.Context) ([]GetAllPublishersNameRow, error) {
	rows, err := q.db.Query(ctx, getAllPublishersName)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllPublishersNameRow
	for rows.Next() {
		var i GetAllPublishersNameRow
		if err := rows.Scan(&i.ID, &i.PublisherName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
